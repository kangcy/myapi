@using EGT_OTA.Models
@{
    Layout = null;
}
@inherits System.Web.Mvc.WebViewPage
<!DOCTYPE html>
<html>
<head>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1,maximum-scale=1,user-scalable=no">
    <meta charset="utf-8" />
    <meta http-equiv="Pragma" content="no-cache">
    <meta http-equiv="Cache-Control" content="no-cache">
    <meta http-equiv="Expires" content="0">
    <meta name="format-detection" content="telephone = no" />
    <title></title>
    <link rel="stylesheet" type="text/css" href="@Url.Content("~/Back/mui.min.css")"  />
    <link rel="stylesheet" type="text/css" href="@Url.Content("~/Back/table.css")"  />
    <link rel="stylesheet" type="text/css" href="@Url.Content("~/Back/cropper/cropper.css")"  />
</head>
<body>
    <div class="container">
        <div class="row">
            <div class="col-lg-10 col-lg-offset-1">
                <div id="scroll-view" class="el-card__body">
                    <div id="wrapper" class="mui-iframe-wrapper full tc" style="bottom: 50px;">
                        <img id="readyimg" style="width: auto; height: auto; max-width: 100%; max-height: 100%; display: inline-block;" />
                    </div>
                    <footer class="mui-bar mui-bar-tab" style="background: #f8f8f8; border-top: 1px solid #ddd;">
                        <a class="mui-icon blue fl mt6 ml10" style="font-size: 16px; cursor: pointer;" onclick="Choose()">更换</a>
                        <a class="mui-icon blue fr mt6 mr10" style="font-size: 16px; cursor: pointer;" onclick="Confirm()">完成</a>
                        <div class="mui-title tc">
                            <div style="width: 150px; display: inline-block; text-align: center;">
                                <div style="width: 50%; display: none;" id="rotateimgright">
                                    <img src="../Back/Images/e1.png" style="width: 40px; height: 40px; margin-top: 3px; display: inline-block;" onclick="rotateimgright()" />
                                </div>
                                <div style="width: 50%; display: none;" id="openpop">
                                    <img src="../Back/Images/e2.png" style="width: 40px; height: 40px; margin-top: 3px; display: inline-block;" onclick="openpop()" />
                                </div>
                                <div style="width: 50%; display: none;" id="closepop">
                                    <img src="../Back/Images/e4.png" style="width: 40px; height: 40px; margin-top: 3px; display: inline-block;" onclick="closepop()" />
                                </div>
                            </div>
                        </div>
                    </footer>
                </div>
            </div>
        </div>
    </div>
    <input type="file" id="inputImage" name="file" accept=".jpg,.jpeg,.png,.gif,.bmp,.tiff" class="hide">
</body>
</html>
<script src="@Url.Content("~/Scripts/jquery-2.1.1.min.js")"></script>
<script src="@Url.Content("~/Back/layer/layer.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/cropper.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/mui.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/base.min.js")" type="text/javascript"></script>
<script type="text/javascript">
    var totalheight = window.innerHeight - 50;
    var totalwidth = window.innerWidth;
    var Url = "";
    var Source = "";
    var Standard = "";
    var PartID = 0;
    var ArticleNumber = "";
    var UserNumber = "";
    var isLoading = false;
    var $image = $('#readyimg');
    var $inputImage = $('#inputImage');
    var uploadedImageType = 'image/jpeg';
    var uploadedImageURL = "";
    var isCutImging = false;
    var index = parent.layer.getFrameIndex(window.name);

    $(document).ready(function () {
        $("#wrapper").css({
            "top": "0px",
            "height": totalheight + "px"
        });
        $inputImage.change(function () {
            var files = this.files;
            if (files && files.length) {
                var file = files[0];
                if (/^image\/\w+$/.test(file.type)) {
                    uploadedImageType = file.type;
                    if (uploadedImageURL) {
                        URL.revokeObjectURL(uploadedImageURL);
                    }
                    uploadedImageURL = URL.createObjectURL(file);
                    if (!base.IsNullOrEmpty(uploadedImageURL)) {
                        if (isCutImging) {
                            closepop();
                        }
                        $image.hide();

                        var img = new Image();
                        img.src = uploadedImageURL;
                        if (img.complete) {
                            InitImg(uploadedImageURL);
                        } else {
                            img.onload = function () {
                                InitImg(uploadedImageURL);
                            };
                        }
                    }
                    $inputImage.val('');
                }
            }
        });
    });

    function InitImg(src) {
        $image.attr("src", src);
        var imagewidth = $image.width();
        var imageheight = $image.height();
        $image.css({
            "width": "auto",
            "height": "auto",
            "margin-top": "0px",
            "margin-left": "0px"
        });
        if (totalheight >= imageheight) {
            $image.css("margin-top", (totalheight - imageheight) / 2 + "px");
        }
        //用户封面、用户头像
        if (Standard == "UserCover" || Standard == "UserAvatar") {
            openpop();
        } else {
            $image.show();
            base.Get("openpop").style.display = "inline-block";
        }
    }

    //初始化
    function Init(src, source, standard, partid, articlenumber, usernumber) {
        Url = src;
        Source = source;
        Standard = standard;
        PartID = partid;
        ArticleNumber = articlenumber;
        UserNumber = usernumber;
        if (base.IsNullOrEmpty(Url)) {
            return;
        }
        $image.hide().attr("src", Url).load(function () {
            var imagewidth = $image.width();
            var imageheight = $image.height();
            $image.css({
                "width": "auto",
                "height": "auto",
                "margin-top": "0px",
                "margin-left": "0px"
            });
            if (totalheight > imageheight) {
                $image.css("margin-top", (totalheight - imageheight) / 2 + "px");
            }
            //用户封面、用户头像
            if (Standard == "UserCover" || Standard == "UserAvatar") {
                openpop();
            } else {
                $image.show();
                base.Get("openpop").style.display = "inline-block";
            }
        });
    }

    //照片裁剪类  
    function CutImg(callback) {
        if (!isCutImging) {
            isCutImging = true;
            base.Get("rotateimgright").style.display = "none";
            base.Get("openpop").style.display = "none";
            base.Get("closepop").style.display = "none";
            //用户封面、用户头像
            if (Standard == "UserCover" || Standard == "UserAvatar") {
                var ratio = 1 / 1;
                switch (Standard) {
                    case "UserCover":
                        ratio = 4 / 3;
                        break;
                    case "UserAvatar":
                        ratio = 1 / 1;
                        break;
                    default:
                        break;
                }
                $image.cropper({
                    checkImageOrigin: false,
                    aspectRatio: ratio, //裁剪比例
                    autoCropArea: 1, //裁剪框大小
                    toggleDragModeOnDblclick: false,
                    dragCrop: false, //是否允许移除当前的剪裁框，并通过拖动来新建一个剪裁框区域
                    zoomable: true, //是否允许放大缩小图片
                    movable: false, //是否允许移动剪裁框
                    resizable: false, //是否允许改变裁剪框大小
                    built: function () {
                        callback();
                        $image.show();
                        base.Get("rotateimgright").style.display = "inline-block";
                    }
                });
            } else {
                $image.cropper({
                    checkImageOrigin: false,
                    autoCropArea: 0.6, //裁剪框大小
                    toggleDragModeOnDblclick: false,
                    dragCrop: false, //是否允许移除当前的剪裁框，并通过拖动来新建一个剪裁框区域
                    zoomable: true, //是否允许放大缩小图片
                    movable: true, //是否允许移动剪裁框
                    resizable: true, //是否允许改变裁剪框大小
                    built: function () {
                        callback();
                        $image.show();
                        base.Get("rotateimgright").style.display = "inline-block";
                        base.Get("closepop").style.display = "inline-block";
                    }
                });
            }
        }
    }

    //右旋转90度  
    function rotateimgright() {
        if (isCutImging) {
            $image.cropper('rotate', 90);
        } else {
            CutImg(function () {
                $image.cropper('rotate', 90);
            });
        }

    }

    //左旋转90度
    function rotateimgleft() {
        if (isCutImging) {
            $image.cropper('rotate', -90);
        } else {
            CutImg(function () {
                $image.cropper('rotate', -90);
            });
        }
    }

    //打开裁剪窗口
    function openpop() {
        CutImg(function () { })
    }

    //关闭裁剪窗口
    function closepop() {
        base.Get("rotateimgright").style.display = "none";
        base.Get("closepop").style.display = "none";
        base.Get("openpop").style.display = "inline-block";
        $image.cropper('destroy');
        isCutImging = false;
    }

    //将图片压缩转成base64 
    function getBase64Image(img) {
        var canvas = document.createElement("canvas");
        var width = img.width;
        var height = img.height;
        canvas.width = width; /*设置新的图片的宽度*/
        canvas.height = height; /*设置新的图片的长度*/
        var ctx = canvas.getContext("2d");
        ctx.drawImage(img, 0, 0, width, height); /*绘图*/
        return canvas.toDataURL("image/jpeg", 1);
    }

    //更换
    function Choose() {
        return $inputImage.click();
    }

    //请求上传图片
    function Upload(imgurl) {
        layer.load();
        HttpPost("@(ViewBag.RootUrl)Upload/Upload", {
            str: imgurl,
            standard: Standard,
            Number: UserNumber
        }, function (data) {
            if (data != null) {
                if (data.result) {
                    //var url = "@(ViewBag.RootUrl)" + data.message;
                    var url = data.message;
                    parent.AddPic((PartID == 0 ? base.GetUid() : PartID), url, PartID);
                    parent.layer.close(index);
                } else {
                    layer.msg(data.message);
                }
            }
        });
    }

    //完成
    function Confirm() {
        var imgurl = $image.attr("src");
        if (base.IsNullOrEmpty(imgurl)) {
            return;
        }
        if (isCutImging) {
            var dataURL = $image.cropper("getCroppedCanvas");
            imgurl = dataURL.toDataURL("image/jpeg", 1);
            Upload(imgurl);
        } else {
            //原图返回
            if (imgurl.toLowerCase().startWith("http")) {
                parent.layer.close(index);
                return;
            } else {
                var image = new Image();
                image.src = imgurl;
                if (image.complete) {
                    var imgData = getBase64Image(image);
                    Upload(imgData);
                } else {
                    image.onload = function () {
                        var imgData = getBase64Image(image);
                        Upload(imgData);
                    };
                }
            }
        }
    }

    String.prototype.startWith = function (str) {
        var reg = new RegExp("^" + str);
        return reg.test(this);
    }

    String.prototype.endWith = function (str) {
        var reg = new RegExp(str + "$");
        return reg.test(this);
    }
</script>
